#!/bin/sh

set -e

use_https=""
update_existing="1"

while [ -n "$1" ] ; do
    case "$1" in
        --https)
            use_https="1"
        ;;
        --no-update)
            update_existing=""
        ;;
        --update)
            update_existing="1"
        ;;
    esac
    shift
done


PROJECT_DIR="${PROJECT_DIR-}"

if [ "x$PROJECT_DIR" = "x" ] ; then
    if [ -d ./.git ] ; then
        PROJECT_DIR=".."
    else
        PROJECT_DIR="."
    fi
fi

printf "${CODE_COLOR_CYAN}=>${CODE_COLOR_NOCOLOR} project directory: ${CODE_COLOR_RED}%s${CODE_COLOR_NOCOLOR}\n" "${PROJECT_DIR}"

if [ -z "$use_https" ] ; then
    eval `ssh-agent -s`
    if [ -f ./load-ssh-keys ] ; then
        printf "${CODE_COLOR_CYAN}=>${CODE_COLOR_NOCOLOR} reading ./load-ssh-keys\n"
        . ./load-ssh-keys
    elif [ -f ~/.ssh/id_rsa ] ; then
        printf "${CODE_COLOR_CYAN}=>${CODE_COLOR_NOCOLOR} ssh-add ~/.ssh/id_rsa\n"
        ssh-add ~/.ssh/id_rsa
    fi
fi

for i in 1 2 3 4 5 ; do

    set +e

    REPOS="`curl https://api.github.com/orgs/sde-gui/repos`"

    if [ -n "$use_https" ] ; then
        URLS="`echo "$REPOS" | grep clone_url | grep -E -o 'https://.*\.git'`"
    else
        URLS="`echo "$REPOS" | grep ssh_url | grep -E -o 'git@.*\.git'`"
    fi

    set -e

    if ! echo "$URLS" | grep -q "\.git" ; then
        printf "Failed to read repos list. Something went wrong.\nReceived content:\n%s\n" "$REPOS"
        sleep 15
    else
        break
    fi

done

cd "$PROJECT_DIR" 

for url in $URLS ; do
    name="`echo "$url" | grep -o '[^/]\+\.git$' | sed 's/\.git$//'`"
    if [ -d "$name/.git" ] ; then
        if [ -n "$update_existing" ] ; then
            printf "${CODE_COLOR_BLUE}=>${CODE_COLOR_NOCOLOR} %-30s - updating\n" "$name"
            (cd "$name" && git pull --all)
        else
            printf "${CODE_COLOR_BLUE}=>${CODE_COLOR_NOCOLOR} %-30s - skipping\n" "$name"
        fi
        continue
    fi

    printf "${CODE_COLOR_BLUE}=>${CODE_COLOR_NOCOLOR} %-30s - fetching %s\n" "$name" "$url"
    git clone "$url"
done