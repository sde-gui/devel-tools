#!/bin/sh

if [ "x$BASH_VERSION" != "x" ] ; then
    set -o nounset
fi

set -e

####################################################################################

die(){
    printf "%s: %s\n" \
        "$0" "$1"
    exit 1
}

####################################################################################

(git status >/dev/null) || die "failed: git status"

if test -n "`git status --ignored --short | grep -v '^.. configure[.]ac$'`" ; then
    echo "git status:"
    git status --ignored --short
    die "this command should be run on a clean repo"
fi

####################################################################################

echo "running ./autogen.sh"
(./autogen.sh >autogen.log 2>&1) || die "./autogen.sh failed; see autogen.log for details"

test -f config.h.in~ && rm config.h.in~
test -f configure~ && rm configure~

####################################################################################

new_files_all="`git status --ignored --short | sed 's/^.. //' | sort`"
new_files_unignored="`git status --short | sed 's/^.. //' | sort`"

echo "$new_files_all" > new_files_all.$$.tmp
echo "$new_files_unignored" > new_files_unignored.$$.tmp

new_files_ignored="`diff --new-line-format="" --unchanged-line-format="" new_files_all.$$.tmp new_files_unignored.$$.tmp || true`"

rm new_files_all.$$.tmp new_files_unignored.$$.tmp

if test -n "$new_files_ignored" ; then
    echo "adding !-patterns to .gitignore"
    echo "" >> .gitignore
    echo "# autogenerated by sde-generate-autotool-stuff-for-release:" >> .gitignore
    echo "$new_files_ignored" | while IFS='' read f ; do
        echo "  !/$f"
        echo "!/$f" >> .gitignore
    done
fi
